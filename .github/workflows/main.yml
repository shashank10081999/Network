name: NetworkSecurity workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - README.md

jobs:
    integration:
        name: Container Integration
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint Check
              run: echo "Lint check passed!"
    
    build-and-push-ecr-image:
        name: Build and Push ECR Image
        needs: integration 
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Utilities
              run: |
                sudo apt-get update
                sudo apt-get install -y jq unzip
            
            - name: Login to AWS
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-west-1

            - name: Log in to Amazon ECR
              id: ecr-registry
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build Docker Image
              env:
                ECR_REGISTRY: ${{ steps.ecr-registry.outputs.registry }}
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
                IMAGE_TAG: latest
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "Docker image pushed to ECR: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    continous-deployment:
        name: Continuous Deployment
        needs: build-and-push-ecr-image
        runs-on: self-hosted

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - name: Login to AWS
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-west-1

            - name: Login to AWS ECR
              id: ecr-registry
              uses: aws-actions/amazon-ecr-login@v1

            - name: Pull Docker Image
              env:
                ECR_REGISTRY: ${{ steps.ecr-registry.outputs.registry }}
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
                IMAGE_TAG: latest
              run: |
                docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "Docker image pulled from ECR: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

            - name: Run Docker Image to Serve users
              run: |
                docker run -d -p 8080:8080 --ipc="host" --name=Network -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=us-west-1' $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "Docker image is running on port 8080"